//Parameter("")
$a = 1;
//Parameter("")
b = 6;
//Description("assert test")
//Parameter("")
a = 3;
//Parameter("")
c = 2;
d = (c + 9);
//Parameter("")
s = "stringvar";
//Parameter("")
v = [1, "vecstr", 2.34, false];
//Parameter("")
r = [1 : 2 : 10];
echo(let() ($a * b));
echo(let($a = 2, b = 3) ($a * b));
echo(let(b = 2, $a = 3) ($a * b));
echo(let($a = 2) ($a * b));
echo(let(b = 3) ($a * b));
echo(let($a = 2, b = 3, $a = 4) ($a * b));
echo(let($a = 2, b = 3, b = 5) ($a * b));
echo(let($a = 2, b = 3, $a = 4, b = 5) ($a * b));
echo(let($a = 2, b = ($a * 3)) ($a * b));
echo(let($a = (2 * b), b = 3) ($a * b));
echo(let($a = (2 * b), b = ($a * 3)) ($a * b));
echo(let(b = ($a * 3), $a = (2 * b)) ($a * b));
echo(let(b = $a, $a = b) [$a, b]);
echo(let(b = (2 * $a), $a = b) [for(i = [1 : b]) ([i, $a])]);
let(42);
let(1, 2, 3, 4);
assert(true);
assert("t1");
assert((a * b));
assert(condition = (a * b));
assert(true) cube(8, center = true);
translate([0, 20, 0]) assert(condition = 2) sphere(5);
assert(condition = ((d + 5) > 15), message = str("value: ", (d + 5))) translate([15, 0, 0]) cylinder(8, 5, center = true);
echo("assert-tests");
echo(undef);
echo("string");
echo(s);
echo(a = 1, b = 2, true, c = false);
echo(v);
echo(r);
echo(vec = [1, 2, 3]);
echo(range = [0 : 2]);
echo(str("string generated by str()"));
